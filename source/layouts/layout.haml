!!!
%html{:lang => "en"}
  %head
    %meta{:content => "text/html; charset=UTF-8", "http-equiv" => "Content-Type"}/
    %meta{:charset => "utf-8"}/
    %meta{:content => "IE=edge,chrome=1", "http-equiv" => "X-UA-Compatible"}/
    %meta{:content => "width=device-width,initial-scale=1", :name => "viewport"}/
    %meta{:content => "Components and patterns built with Bourbon and Neat.", :name => "description"}/
    %title
      Refills#{" - #{ current_page.data.title}" if current_page.data.title}
    %link{:href => "//fonts.googleapis.com/css?family=Oswald:400,300,700|Lusitana:400,700|Open+Sans:400,800", :rel => "stylesheet"}/
    = stylesheet_link_tag "all"
    %script{:src => "//ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"}
    %script{:src => "/javascripts/jquery.erToc.js"}
    :javascript
      !function(){var analytics=window.analytics=window.analytics||[];if(!analytics.initialize)if(analytics.invoked)window.console&&console.error&&console.error("Segment snippet included twice.");else{analytics.invoked=!0;analytics.methods=["trackSubmit","trackClick","trackLink","trackForm","pageview","identify","group","track","ready","alias","page","once","off","on"];analytics.factory=function(t){return function(){var e=Array.prototype.slice.call(arguments);e.unshift(t);analytics.push(e);return analytics}};for(var t=0;t<analytics.methods.length;t++){var e=analytics.methods[t];analytics[e]=analytics.factory(e)}analytics.load=function(t){var e=document.createElement("script");e.type="text/javascript";e.async=!0;e.src=("https:"===document.location.protocol?"https://":"http://")+"cdn.segment.com/analytics.js/v1/"+t+"/analytics.min.js";var n=document.getElementsByTagName("script")[0];n.parentNode.insertBefore(e,n)};analytics.SNIPPET_VERSION="3.0.1";
      analytics.load("zqKH1nPNSA5uCwV1XiBz3LvGfPH6Muq9");
      analytics.page()
      }}();
  %body{:class => page_classes}
    %nav.bourbon
      %ul
        %li
          %a.bourbon{:href => "//bourbon.io"} Bourbon
        %li
          %a.neat{:href => "//neat.bourbon.io"} Neat
        %li
          %a.bitters{:href => "//bitters.bourbon.io"} Bitters
        %li
          %a.refills.current{:href => "//refills.bourbon.io"} Refills
      %h1
        Maintained by the design team at
        %a{:href => "//thoughtbot.com"} thoughtbot
    %section.container
      %section.inner-content
        = yield
        %footer.refills-footer
          %ul.footer-links
            %li= link_to 'Patterns', '/index.html'
            %li= link_to 'Components', '/components.html'
            %li= link_to 'Type Systems', '/type-systems.html'
            %li= link_to 'Unstyled Components', '/unstyled.html'
          .refills-footer-logo
            %img{:alt => "thoughtbot Ralph logo mark", :src => "/images/ralph-gray.png"}/
          %p
            Refills is maintained and funded by
            = succeed "." do
              %a{:href => "//thoughtbot.com"} thoughtbot, inc
          %p
            Copyright © 2014–2015
            = succeed "." do
              %a{:href => "//thoughtbot.com"} thoughtbot, inc
            = succeed "." do
              %a{:href => "//github.com/thoughtbot/refills/blob/master/LICENSE.md"} license
    %script{:src => "https://maps.googleapis.com/maps/api/js"}
    :javascript
      var bittersMap = (function () {
        var myLatlng = new google.maps.LatLng(59.342457, 18.057340),
            mapCenter = new google.maps.LatLng(59.340458, 18.057340),
            mapCanvas = document.getElementById('map_canvas'),
            mapOptions = {
              center: mapCenter,
              zoom: 13,
              scrollwheel: false,
              draggable: true,
              disableDefaultUI: true,
              mapTypeId: google.maps.MapTypeId.ROADMAP
            },
            map = new google.maps.Map(mapCanvas, mapOptions),
            contentString =
              '<div id="content">'+
              '<div id="siteNotice">'+
              '</div>'+
              '<h1 id="firstHeading" class="firstHeading">thoughtbot</h1>'+
              '<div id="bodyContent"'+
              '<p>Sveavägen 98</p>'+
              '</div>'+
              '</div>',
            infowindow = new google.maps.InfoWindow({
              content: contentString,
              maxWidth: 300
            }),
            marker = new google.maps.Marker({
              position: myLatlng,
              map: map,
              title: 'thoughtbot (Sweden)'
            });

        return {
          init: function () {
            map.set('styles', [{
              featureType: 'landscape',
              elementType: 'geometry',
              stylers: [
                { hue: '#ffff00' },
                { saturation: 30 },
                { lightness: 10}
              ]}
            ]);

            google.maps.event.addListener(marker, 'click', function () {
              infowindow.open(map,marker);
            });
          }
        };
      }());

      bittersMap.init();
  = javascript_include_tag "all"
